{
  "{\"sourceRoot\":\"/Users/apple/WeUsThem/src\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/apple/WeUsThem\",\"filename\":\"/Users/apple/WeUsThem/src/index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/apple/WeUsThem\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/apple/WeUsThem/src",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/apple/WeUsThem",
      "filename": "/Users/apple/WeUsThem/src/index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/apple/WeUsThem",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/apple/WeUsThem/src/index.js",
        "plugins": [
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/apple/WeUsThem/src/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/apple/WeUsThem/src",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar mysql = require(\"mysql\");\n/*** Start Server on port 3000 ***/\n\n\nvar app = (0, _express[\"default\"])();\napp.listen(3000, function () {\n  return console.log(\"Example app listening on port 3000!\");\n});\n/*** START of MySQL Connection Initialization ***/\n\nvar con = mysql.createConnection({\n  host: \"localhost\",\n  user: \"devtest\",\n  password: \"devtest\"\n});\ncon.connect(function (err) {\n  if (err) throw err;\n  console.log(\"MySQL Connected!\");\n});\n/*** END of MySQL Connection Initialization ***/\n\n/***** Backend Functions *****/\n\n/*** Authenticate ****/\n\napp.get(\"/email/auth/:address\", function (req, res) {\n  var sql = \"SELECT user_id FROM email.users WHERE address = '\".concat(req.params.address, \"'\");\n  con.query(sql, function (err, result) {\n    if (err) throw err;\n    res.send(result);\n  });\n});\n/*** RECEIVE EMAIL (GET): Unarchived ****/\n\napp.get(\"/email/:userid\", function (req, res) {\n  var sql = \"SELECT * FROM email.messages WHERE recipient_id = \".concat(req.params.userid, \" AND archived = false\");\n  con.query(sql, function (err, result) {\n    if (err) throw err;\n    res.send(result);\n  });\n});\n/*** RECEIVE EMAIL (GET): Archived ****/\n\napp.get(\"/email/:userid/archived\", function (req, res) {\n  var sql = \"SELECT * FROM email.messages WHERE recipient_id = \".concat(req.params.userid, \" AND archived = true\");\n  con.query(sql, function (err, result) {\n    if (err) throw err;\n    res.send(result);\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbIm15c3FsIiwicmVxdWlyZSIsImFwcCIsImxpc3RlbiIsImNvbnNvbGUiLCJsb2ciLCJjb24iLCJjcmVhdGVDb25uZWN0aW9uIiwiaG9zdCIsInVzZXIiLCJwYXNzd29yZCIsImNvbm5lY3QiLCJlcnIiLCJnZXQiLCJyZXEiLCJyZXMiLCJzcWwiLCJwYXJhbXMiLCJhZGRyZXNzIiwicXVlcnkiLCJyZXN1bHQiLCJzZW5kIiwidXNlcmlkIl0sIm1hcHBpbmdzIjoiOztBQUFBOzs7O0FBQ0EsSUFBSUEsS0FBSyxHQUFHQyxPQUFPLENBQUMsT0FBRCxDQUFuQjtBQUVBOzs7QUFDQSxJQUFNQyxHQUFHLEdBQUcsMEJBQVo7QUFDQUEsR0FBRyxDQUFDQyxNQUFKLENBQVcsSUFBWCxFQUFpQjtBQUFBLFNBQU1DLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLHFDQUFaLENBQU47QUFBQSxDQUFqQjtBQUVBOztBQUNBLElBQUlDLEdBQUcsR0FBR04sS0FBSyxDQUFDTyxnQkFBTixDQUF1QjtBQUMvQkMsRUFBQUEsSUFBSSxFQUFFLFdBRHlCO0FBRS9CQyxFQUFBQSxJQUFJLEVBQUUsU0FGeUI7QUFHL0JDLEVBQUFBLFFBQVEsRUFBRTtBQUhxQixDQUF2QixDQUFWO0FBTUFKLEdBQUcsQ0FBQ0ssT0FBSixDQUFZLFVBQVNDLEdBQVQsRUFBYztBQUN4QixNQUFJQSxHQUFKLEVBQVMsTUFBTUEsR0FBTjtBQUNUUixFQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWSxrQkFBWjtBQUNELENBSEQ7QUFJQTs7QUFFQTs7QUFFQTs7QUFDQUgsR0FBRyxDQUFDVyxHQUFKLENBQVEsc0JBQVIsRUFBZ0MsVUFBQ0MsR0FBRCxFQUFNQyxHQUFOLEVBQWM7QUFDNUMsTUFBSUMsR0FBRyw4REFBdURGLEdBQUcsQ0FBQ0csTUFBSixDQUFXQyxPQUFsRSxNQUFQO0FBQ0FaLEVBQUFBLEdBQUcsQ0FBQ2EsS0FBSixDQUFVSCxHQUFWLEVBQWUsVUFBU0osR0FBVCxFQUFjUSxNQUFkLEVBQXNCO0FBQ25DLFFBQUlSLEdBQUosRUFBUyxNQUFNQSxHQUFOO0FBQ1RHLElBQUFBLEdBQUcsQ0FBQ00sSUFBSixDQUFTRCxNQUFUO0FBQ0QsR0FIRDtBQUlELENBTkQ7QUFRQTs7QUFDQWxCLEdBQUcsQ0FBQ1csR0FBSixDQUFRLGdCQUFSLEVBQTBCLFVBQUNDLEdBQUQsRUFBTUMsR0FBTixFQUFjO0FBQ3BDLE1BQUlDLEdBQUcsK0RBQXdERixHQUFHLENBQUNHLE1BQUosQ0FBV0ssTUFBbkUsMEJBQVA7QUFDQWhCLEVBQUFBLEdBQUcsQ0FBQ2EsS0FBSixDQUFVSCxHQUFWLEVBQWUsVUFBU0osR0FBVCxFQUFjUSxNQUFkLEVBQXNCO0FBQ25DLFFBQUlSLEdBQUosRUFBUyxNQUFNQSxHQUFOO0FBQ1RHLElBQUFBLEdBQUcsQ0FBQ00sSUFBSixDQUFTRCxNQUFUO0FBQ0QsR0FIRDtBQUlELENBTkg7QUFRQTs7QUFDQWxCLEdBQUcsQ0FBQ1csR0FBSixDQUFRLHlCQUFSLEVBQW1DLFVBQUNDLEdBQUQsRUFBTUMsR0FBTixFQUFjO0FBQzdDLE1BQUlDLEdBQUcsK0RBQXdERixHQUFHLENBQUNHLE1BQUosQ0FBV0ssTUFBbkUseUJBQVA7QUFDQWhCLEVBQUFBLEdBQUcsQ0FBQ2EsS0FBSixDQUFVSCxHQUFWLEVBQWUsVUFBU0osR0FBVCxFQUFjUSxNQUFkLEVBQXNCO0FBQ25DLFFBQUlSLEdBQUosRUFBUyxNQUFNQSxHQUFOO0FBQ1RHLElBQUFBLEdBQUcsQ0FBQ00sSUFBSixDQUFTRCxNQUFUO0FBQ0QsR0FIRDtBQUlELENBTkgiLCJzb3VyY2VSb290IjoiL1VzZXJzL2FwcGxlL1dlVXNUaGVtL3NyYyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBleHByZXNzIGZyb20gXCJleHByZXNzXCI7XG52YXIgbXlzcWwgPSByZXF1aXJlKFwibXlzcWxcIik7XG5cbi8qKiogU3RhcnQgU2VydmVyIG9uIHBvcnQgMzAwMCAqKiovXG5jb25zdCBhcHAgPSBleHByZXNzKCk7XG5hcHAubGlzdGVuKDMwMDAsICgpID0+IGNvbnNvbGUubG9nKFwiRXhhbXBsZSBhcHAgbGlzdGVuaW5nIG9uIHBvcnQgMzAwMCFcIikpO1xuXG4vKioqIFNUQVJUIG9mIE15U1FMIENvbm5lY3Rpb24gSW5pdGlhbGl6YXRpb24gKioqL1xudmFyIGNvbiA9IG15c3FsLmNyZWF0ZUNvbm5lY3Rpb24oe1xuICBob3N0OiBcImxvY2FsaG9zdFwiLFxuICB1c2VyOiBcImRldnRlc3RcIixcbiAgcGFzc3dvcmQ6IFwiZGV2dGVzdFwiXG59KTtcblxuY29uLmNvbm5lY3QoZnVuY3Rpb24oZXJyKSB7XG4gIGlmIChlcnIpIHRocm93IGVycjtcbiAgY29uc29sZS5sb2coXCJNeVNRTCBDb25uZWN0ZWQhXCIpO1xufSk7XG4vKioqIEVORCBvZiBNeVNRTCBDb25uZWN0aW9uIEluaXRpYWxpemF0aW9uICoqKi9cblxuLyoqKioqIEJhY2tlbmQgRnVuY3Rpb25zICoqKioqL1xuXG4vKioqIEF1dGhlbnRpY2F0ZSAqKioqL1xuYXBwLmdldChcIi9lbWFpbC9hdXRoLzphZGRyZXNzXCIsIChyZXEsIHJlcykgPT4ge1xuICBsZXQgc3FsID0gYFNFTEVDVCB1c2VyX2lkIEZST00gZW1haWwudXNlcnMgV0hFUkUgYWRkcmVzcyA9ICcke3JlcS5wYXJhbXMuYWRkcmVzc30nYDtcbiAgY29uLnF1ZXJ5KHNxbCwgZnVuY3Rpb24oZXJyLCByZXN1bHQpIHtcbiAgICBpZiAoZXJyKSB0aHJvdyBlcnI7XG4gICAgcmVzLnNlbmQocmVzdWx0KTtcbiAgfSk7XG59KTtcblxuLyoqKiBSRUNFSVZFIEVNQUlMIChHRVQpOiBVbmFyY2hpdmVkICoqKiovXG5hcHAuZ2V0KFwiL2VtYWlsLzp1c2VyaWRcIiwgKHJlcSwgcmVzKSA9PiB7XG4gICAgbGV0IHNxbCA9IGBTRUxFQ1QgKiBGUk9NIGVtYWlsLm1lc3NhZ2VzIFdIRVJFIHJlY2lwaWVudF9pZCA9ICR7cmVxLnBhcmFtcy51c2VyaWR9IEFORCBhcmNoaXZlZCA9IGZhbHNlYDtcbiAgICBjb24ucXVlcnkoc3FsLCBmdW5jdGlvbihlcnIsIHJlc3VsdCkge1xuICAgICAgaWYgKGVycikgdGhyb3cgZXJyO1xuICAgICAgcmVzLnNlbmQocmVzdWx0KTtcbiAgICB9KTtcbiAgfSk7XG5cbi8qKiogUkVDRUlWRSBFTUFJTCAoR0VUKTogQXJjaGl2ZWQgKioqKi9cbmFwcC5nZXQoXCIvZW1haWwvOnVzZXJpZC9hcmNoaXZlZFwiLCAocmVxLCByZXMpID0+IHtcbiAgICBsZXQgc3FsID0gYFNFTEVDVCAqIEZST00gZW1haWwubWVzc2FnZXMgV0hFUkUgcmVjaXBpZW50X2lkID0gJHtyZXEucGFyYW1zLnVzZXJpZH0gQU5EIGFyY2hpdmVkID0gdHJ1ZWA7XG4gICAgY29uLnF1ZXJ5KHNxbCwgZnVuY3Rpb24oZXJyLCByZXN1bHQpIHtcbiAgICAgIGlmIChlcnIpIHRocm93IGVycjtcbiAgICAgIHJlcy5zZW5kKHJlc3VsdCk7XG4gICAgfSk7XG4gIH0pO1xuXG5cbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "mysql",
        "require",
        "app",
        "listen",
        "console",
        "log",
        "con",
        "createConnection",
        "host",
        "user",
        "password",
        "connect",
        "err",
        "get",
        "req",
        "res",
        "sql",
        "params",
        "address",
        "query",
        "result",
        "send",
        "userid"
      ],
      "mappings": ";;AAAA;;;;AACA,IAAIA,KAAK,GAAGC,OAAO,CAAC,OAAD,CAAnB;AAEA;;;AACA,IAAMC,GAAG,GAAG,0BAAZ;AACAA,GAAG,CAACC,MAAJ,CAAW,IAAX,EAAiB;AAAA,SAAMC,OAAO,CAACC,GAAR,CAAY,qCAAZ,CAAN;AAAA,CAAjB;AAEA;;AACA,IAAIC,GAAG,GAAGN,KAAK,CAACO,gBAAN,CAAuB;AAC/BC,EAAAA,IAAI,EAAE,WADyB;AAE/BC,EAAAA,IAAI,EAAE,SAFyB;AAG/BC,EAAAA,QAAQ,EAAE;AAHqB,CAAvB,CAAV;AAMAJ,GAAG,CAACK,OAAJ,CAAY,UAASC,GAAT,EAAc;AACxB,MAAIA,GAAJ,EAAS,MAAMA,GAAN;AACTR,EAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACD,CAHD;AAIA;;AAEA;;AAEA;;AACAH,GAAG,CAACW,GAAJ,CAAQ,sBAAR,EAAgC,UAACC,GAAD,EAAMC,GAAN,EAAc;AAC5C,MAAIC,GAAG,8DAAuDF,GAAG,CAACG,MAAJ,CAAWC,OAAlE,MAAP;AACAZ,EAAAA,GAAG,CAACa,KAAJ,CAAUH,GAAV,EAAe,UAASJ,GAAT,EAAcQ,MAAd,EAAsB;AACnC,QAAIR,GAAJ,EAAS,MAAMA,GAAN;AACTG,IAAAA,GAAG,CAACM,IAAJ,CAASD,MAAT;AACD,GAHD;AAID,CAND;AAQA;;AACAlB,GAAG,CAACW,GAAJ,CAAQ,gBAAR,EAA0B,UAACC,GAAD,EAAMC,GAAN,EAAc;AACpC,MAAIC,GAAG,+DAAwDF,GAAG,CAACG,MAAJ,CAAWK,MAAnE,0BAAP;AACAhB,EAAAA,GAAG,CAACa,KAAJ,CAAUH,GAAV,EAAe,UAASJ,GAAT,EAAcQ,MAAd,EAAsB;AACnC,QAAIR,GAAJ,EAAS,MAAMA,GAAN;AACTG,IAAAA,GAAG,CAACM,IAAJ,CAASD,MAAT;AACD,GAHD;AAID,CANH;AAQA;;AACAlB,GAAG,CAACW,GAAJ,CAAQ,yBAAR,EAAmC,UAACC,GAAD,EAAMC,GAAN,EAAc;AAC7C,MAAIC,GAAG,+DAAwDF,GAAG,CAACG,MAAJ,CAAWK,MAAnE,yBAAP;AACAhB,EAAAA,GAAG,CAACa,KAAJ,CAAUH,GAAV,EAAe,UAASJ,GAAT,EAAcQ,MAAd,EAAsB;AACnC,QAAIR,GAAJ,EAAS,MAAMA,GAAN;AACTG,IAAAA,GAAG,CAACM,IAAJ,CAASD,MAAT;AACD,GAHD;AAID,CANH",
      "sourceRoot": "/Users/apple/WeUsThem/src",
      "sourcesContent": [
        "import express from \"express\";\nvar mysql = require(\"mysql\");\n\n/*** Start Server on port 3000 ***/\nconst app = express();\napp.listen(3000, () => console.log(\"Example app listening on port 3000!\"));\n\n/*** START of MySQL Connection Initialization ***/\nvar con = mysql.createConnection({\n  host: \"localhost\",\n  user: \"devtest\",\n  password: \"devtest\"\n});\n\ncon.connect(function(err) {\n  if (err) throw err;\n  console.log(\"MySQL Connected!\");\n});\n/*** END of MySQL Connection Initialization ***/\n\n/***** Backend Functions *****/\n\n/*** Authenticate ****/\napp.get(\"/email/auth/:address\", (req, res) => {\n  let sql = `SELECT user_id FROM email.users WHERE address = '${req.params.address}'`;\n  con.query(sql, function(err, result) {\n    if (err) throw err;\n    res.send(result);\n  });\n});\n\n/*** RECEIVE EMAIL (GET): Unarchived ****/\napp.get(\"/email/:userid\", (req, res) => {\n    let sql = `SELECT * FROM email.messages WHERE recipient_id = ${req.params.userid} AND archived = false`;\n    con.query(sql, function(err, result) {\n      if (err) throw err;\n      res.send(result);\n    });\n  });\n\n/*** RECEIVE EMAIL (GET): Archived ****/\napp.get(\"/email/:userid/archived\", (req, res) => {\n    let sql = `SELECT * FROM email.messages WHERE recipient_id = ${req.params.userid} AND archived = true`;\n    con.query(sql, function(err, result) {\n      if (err) throw err;\n      res.send(result);\n    });\n  });\n\n\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1565964720382
  }
}